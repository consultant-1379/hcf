<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--
	Copyright (c) 2015 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on Nov 30, 2015 9:34:36 AM using:
	* com.ericsson.ecim.m2m 3.0.2.201509291845
	* com.ericsson.ecim.dsl 3.0.2.201509291845
	* com.ericsson.ecim.edm 3.0.2.201509291845
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
    <dtdVersion>G</dtdVersion>
    <momMetaData>
        <momTitle>Managed Object Model for Health Check Management</momTitle>
        <momSubTitle/>
        <momIdentity>
            <docNum>190 89-APR 901 0574/2</docNum>
            <docLang>Uen</docLang>
            <docRev>A</docRev>
            <docDate>2015-11-30</docDate>
        </momIdentity>
    </momMetaData>
    <mim author="Alessio Cascone (XCASALE)" contact="alessio.cascone@itslab.it" correction="2" date="" docNo="" name="HCM" namespace="urn:com:ericsson:ecim:HCM" namespacePrefix="hcm" organization="" release="1" revision="" version="1">
        <description>Health Check Management function MOM.</description>
        <domainExtension domain="ECIM">
            <extension name="ecimMomName" value="ECIM_HCM"/>
            <extension name="ecimMomVersion" value="1"/>
            <extension name="ecimMomRelease" value="0"/>
            <extension name="ecimMomCorrection" value="0"/>
            <extension name="immNamespace" value="MOM_NAME"/>
        </domainExtension>
        <implements correction="0" name="ECIM_HCM" release="0" version="1"/>
        <struct name="HcRuleInputParameter">
            <description>Indicates a parameter into a rule that can be changed before a health check evaluation.
The name, a brief description and the default value are indicated.
The default value is used in case no user-defined value is provided into attribute inputParameters under MOC HcJob.</description>
            <structMember name="name">
                <description>Specifies the parameter name.</description>
                <string/>
            </structMember>
            <structMember name="value">
                <description>Specifies the parameter value.</description>
                <string/>
            </structMember>
            <structMember name="description">
                <description>Specifies a brief description of the rule parameter.</description>
                <string/>
            </structMember>
        </struct>
        <struct name="FailedHcRule">
            <description>Indicates some information about a failed health check rule.</description>
            <structMember name="hcRule">
                <description>Specifies the RDN of the failed health check rule.</description>
                <string/>
            </structMember>
            <structMember name="reason">
                <description>Specifies a description of the health check rule failure.</description>
                <string/>
            </structMember>
            <structMember name="severity">
                <description>Specifies the severity of the failed health check rule.</description>
                <enumRef name="RuleSeverity">
                    <mimName>HCM</mimName>
                </enumRef>
            </structMember>
        </struct>
        <struct name="HcRuleParameter">
            <description>Specifies an optional parameter that could be provided for rule evaluation.</description>
            <structMember name="name">
                <description>Specifies the parameter name.</description>
                <string/>
            </structMember>
            <structMember name="value">
                <description>Specifies the parameter value.</description>
                <string/>
            </structMember>
            <structMember name="hcRule">
                <description>Specifies the RDN of the HcRule object for which the parameter must be used.
It must be a string having the format "HcRule=&lt;RULE_ID&gt;".</description>
                <string/>
            </structMember>
        </struct>
        <enum name="HealthStatus">
            <description>Lists the possible health statuses, based on result of all executed rules.</description>
            <enumMember name="HEALTHY">
                <description>Indicates that the NE status is healthy.
The result of all executed rules is as expected.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="NOT_HEALTHY">
                <description>Indicates that the NE status is not healthy.
The result of at least one rule, which severity is CRITICAL, is not as expected.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="WARNING">
                <description>Indicates that the NE status is warning.    
The result of at least one rule, which severity is WARNING, is not as expected and the result of all CRITICAL ones is as expected.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="NOT_AVAILABLE">
                <description>Indicates that the NE status is not available.
The result of all executed rules is still not available or the execution never started.</description>
                <value>3</value>
            </enumMember>
        </enum>
        <enum name="RuleSeverity">
            <description>Lists the possible severity values of a rule.
Each value describes how the node healthiness status is affected when the rule result is not the expected one.</description>
            <enumMember name="CRITICAL">
                <description>Indicates a rule which failure is critical for ME healthness.
In that case, the ME requires immediate actions.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="WARNING">
                <description>Indicates a rule which failure is a warning for ME healthness.
In that case, the ME requires user attention. </description>
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="HcCategory">
            <description>Lists the possible categories to which a health check rule can belong to.
A category aims to facilitate the execution of rules to help customers the planning of their execution according to specific O&amp;M activity.</description>
            <enumMember name="BACKOFFICE">
                <description>Indicates that the rule should be executed for backoffice operation tests.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="DAILY">
                <description>Indicates that the rule should be executed daily.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="MANDATORY">
                <description>Indicates that the rule should always be executed.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="POSTUPDATE">
                <description>Indicates that the rule should be executed after an update.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="POSTUPGRADE">
                <description>Indicates that the rule should be executed after an upgrade.</description>
                <value>4</value>
            </enumMember>
            <enumMember name="PREINSTALL">
                <description>Indicates that the rule be executed before an installation.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="PREUPDATE">
                <description>Indicates that the rule should be executed before an update.</description>
                <value>6</value>
            </enumMember>
            <enumMember name="PREUPGRADE">
                <description>Indicates that the rule should be executed before an upgrade.</description>
                <value>7</value>
            </enumMember>
            <enumMember name="SHORT">
                <description>Indicates that the rule should be executed for quick checks.</description>
                <value>8</value>
            </enumMember>
            <enumMember name="TROUBLESHOOT">
                <description>Indicates that the rule should be executed for troubleshooting.</description>
                <value>9</value>
            </enumMember>
            <enumMember name="OTHER">
                <description>Indicates that the rule is not included in any of other categories.</description>
                <value>10</value>
            </enumMember>
        </enum>
        <derivedDataType name="EcimPasswordString">
            <description>Holds the password string.</description>
            <baseType>
                <string/>
            </baseType>
        </derivedDataType>
        <class name="HealthCheckM">
            <description>Represents the root MOC for Health Check Management function.
The Health Check Management function reports summary views of the managed element current state highlighting any deviations from a normal behavior. It can be used to attend upgrades and to support preventive maintenance and problem resolution.
The healthiness status is obtained by verifying a set of rules according to their severity, grouped in predefined categories. For instance, if the result of at least one critical rule is not as expected, node status is evaluated as not healthy requiring an immediate action.
The categories of rules which the Health Check Management function is acting upon are system installed.
A health check job can be created selecting one or more categories of rules on which the ME healthiness is evaluated.
A report file is generated for each executed health check job and stored in the predefined folder with a compressed archive file containing logs used for the rules evaluation to be used for further investigation.</description>
            <systemCreated/>
            <root/>
            <attribute name="healthCheckMId">
                <description>Holds the name used when identifying the MO.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="lastUpdateTime">
                <description>Specifies the date and time of the last time the health of the system has been updated.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="lastExecutedJob">
                <description>Specifies the DN of the last job executed to check the ME healthiness.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <moRef name="HcJob">
                        <mimName>HCM</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="lastStatus">
                <description>Specifies the ME healthiness status according to the last executed job.</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <enumRef name="HealthStatus">
                        <defaultValue>NOT_AVAILABLE</defaultValue>
                        <mimName>HCM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="maxNoOfReportFiles">
                <description>Specifies the maximum number of report files with related log files archive maintained in the ME.
If a new file is created and the limit is exceeded, the oldest file is deleted.</description>
                <dataType>
                    <uint16>
                        <defaultValue>10</defaultValue>
                    </uint16>
                </dataType>
            </attribute>
            
        </class>
        <class name="HcJob">
            <description>Represents a health check job which can be executed on a ME.
This class facilitates in executing one or more categories of health check rules.
After each job execution the attributes 'lastUpdateTime' and 'lastStatus' in HealthCheckM MOC are updated accordingly.
It is possible to execute the job on demand or by a scheduler.
A report file is generated for each executed health check job and stored in the predefined folder with a compressed archive file containing logs used for the rules evaluation to be used for further investigation.</description>
            <action name="execute">
                <description>Executes the health check job.
This action executes the health check job, executing the rules for the configured categories, and optionally exports the report file.</description>
                <domainExtension domain="CoreMW">
                    <extension name="admOpId" value="0"/>
                </domainExtension>
                <returnType>
                    <void/>
                </returnType>
                <parameter name="exportUri">
                    <description>Specifies the URI where the job execution output file is to be exported.
This URI must not contain the file name, that is specified by 'lastReportFileName' attribute value.

The generic URI syntax is defined by RFC 3986. The URI must not contain any password. (The password must be provided in the second parameter of this action).
The URI may be local relative (e.g., data/dir/subdir/), or local absolute (e.g., file:///data/dir/subdir/), or remote (sftp://user@hostname/dir/subdir/).
If the URI is local absolute, report and logs archive files are stored under the provided local path.
If the URI is local relative, report and logs archive files are stored under the file system path built chaining the value of localFileStorePath attribute with the provided relative path.
If the URI is remote, report and logs archive files are stored under the provided remote path.
Note: HTTP based URIs are not supported.</description>
                    <isNillable/>
                    <in/>
                    <dataType>
                        <string/>
                    </dataType>
                </parameter>
                <parameter name="exportPassword">
                    <description>Specifies the password required to access the location specified by the URI. 
This parameter is considered only if a SFTP URI is provided, otherwise it is ignored.</description>
                    <isNillable/>
                    <in/>
                    <dataType>
                        <derivedDataTypeRef name="EcimPasswordString">
                            <mimName>HCM</mimName>
                        </derivedDataTypeRef>
                    </dataType>
                </parameter>
            </action>
            <attribute name="hcJobId">
                <description>Holds the name used when identifying the MO.
Specifies the name of the health check job.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="progressReport">
                <description>Specifies the execution status and result of the health check job.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <structRef name="AsyncActionProgress">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </structRef>
                </dataType>
            </attribute>
            <attribute name="lastReportFileName">
                <description>Specifies the name of the report file which is generated from the latest execution of the job.
All the report files are placed in a predefined folder, as indicated by the 'localFileStorePath' attribute value. An archive containing some log files is generated as well.
The name format of the report file generated is &lt;MEId&gt;_&lt;JobName&gt;_&lt;Timestamp&gt;. Timestamp is in the format YYYYMMDDTHHmmSS, where 4 digits for the year, 2 digits for the month, 2 digits for the date, 2 digits for the hours, 2 digits for the minutes and 2 digits for the seconds are specified. 'T' acts as a delimiter between date and time in the above timestamp format. If the job is executed by the action, the suffix "_man" is added at the end of the file name.</description>
                <noNotification/>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="status">
                <description>Specifies the health status based on result of all executed rules. </description>
                <readOnly/>
                <dataType>
                    <enumRef name="HealthStatus">
                        <defaultValue>NOT_AVAILABLE</defaultValue>
                        <mimName>HCM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="rulesCategories">
                <description>Specifies the list of categories of health check rules to be executed.</description>
                <mandatory/>
                <dataType>
                    <sequence>
                        <enumRef name="HcCategory">
                            <mimName>HCM</mimName>
                        </enumRef>
                        <minLength>1</minLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="lastRunTime">
                <description>Specifies the date and time of the last time the job has been executed.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="jobToTrigger">
                <description>Specifies the DN of another job to be executed when the current job reports ME is not healthy.
The execution of another job, for instance to execute rules associated to different categories, might give more detailed information about NE status.</description>
                <isNillable/>
                <dataType>
                    <moRef name="HcJob">
                        <mimName>HCM</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="failedRules">
                <description>Provides a condensed status for the last job execution.
Provides the list of the rules for which the result was not the expected one. 
It is empty when job status is healthy or not available.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <structRef name="FailedHcRule">
                            <mimName>HCM</mimName>
                        </structRef>
                        <minLength>0</minLength>
                        <nonUnique/>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="localFileStorePath">
                <description>Specifies the filesystem path where the ouput report files can be fetched.
It is empty if FileM is not installed/configured.</description>
                <noNotification/>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="inputParameters">
                <description>Specifies customizable input parameters for rules evaluation.
Each item in the list is a triple &lt;hcRule, parameter_name, parameter_value&gt; for which a user-defined attribute can be provided.</description>
                <dataType>
                    <sequence>
                        <structRef name="HcRuleParameter">
                            <mimName>HCM</mimName>
                        </structRef>
                        <minLength>0</minLength>
                        <nonUnique/>
                    </sequence>
                </dataType>
            </attribute>
        </class>
        <class name="HcRule">
            <description>Represents a health check rule.
This class facilitates in providing detailed information about an individual health check rule.
Each rule belongs to one or more health check categories.
Each rule is also associated with a severity value, warning or critical, that affects the evaluation of the overall NE healthiness. For instance, if the result of at least one critical rule is not as expected, node status is evaluated as not healthy requiring an immediate action.
Some health check rules can accept optional parameters as input for the evaluation, if no values are provided system default input parameters are used.</description>
            <systemCreated/>
            <attribute name="hcRuleId">
                <description>Holds the name used when identifying the MO.
Its value is divided into two parts. The first one is an unique identifier for the rule provider while the second one is a numeric identifier (a progressive number for example).</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="description">
                <description>Specifies health check rule description.</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="name">
                <description>Specifies the name of a health check rule.</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="recommendedAction">
                <description>Specifies the step that needs to be performed when the health check rule execution fails.</description>
                <readOnly/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="severity">
                <description>Specify the severity of the rule for the evaluation of the overall NE healthiness.</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <enumRef name="RuleSeverity">
                        <mimName>HCM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="inputParameters">
                <description>Specifies the list of input parameters accepted by the rule with related default values.
It is empty in case the rule does not accept any parameters change.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <structRef name="HcRuleInputParameter">
                            <mimName>HCM</mimName>
                        </structRef>
                        <minLength>0</minLength>
                        <nonUnique/>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>Specifies the administrative state of the rule. </description>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <defaultValue>UNLOCKED</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="categories">
                <description>Specifies the list of categories which the rule belongs to.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <enumRef name="HcCategory">
                            <mimName>HCM</mimName>
                        </enumRef>
                        <minLength>1</minLength>
                    </sequence>
                </dataType>
            </attribute>
        </class>
        <class name="HcJobScheduler">
            <description>Represents the health check job scheduler to start a job automatically at a specified time.
Three scheduling policies are supported:
1. Single event: Executes a health check job once at a specified date and time.
2. Periodic event: Executes a health check job regularly at a specified time interval.
3. Calendar based periodic event: Executes a health check job regularly at a desired interval using calendar.

Once the MO HcJobScheduler is created, MOs HcSingleEvent, HcPeriodicEvent and HcCalendarPeriodicEvent can be created for each of such events.
Scheduler requires to be unlocked to start job execution setting the attribute 'administrativeState'.</description>
            <systemCreated/>
            <attribute name="hcJobSchedulerId">
                <description>Holds the name used when identifying the MO.
Specifies the name of the health check job scheduler.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="nextScheduledTime">
                <description>Specifies the date and time when the next scheduled event is triggered.
This is the earliest scheduled event from among the set of configured events (single, periodic and calendar-based periodic events).</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>Specifies the administrative state of the scheduler.</description>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <defaultValue>LOCKED</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <class name="HcSingleEvent">
            <description>Represents a date/time based event for executing a health check job once.
A single (one-shot) scheduled health check job is executed at the date and time specified by 'scheduledTime' attribute.</description>
            <attribute name="hcSingleEventId">
                <description>Holds the name used when identifying the MO.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="scheduledTime">
                <description>Scheduled time.</description>
                <mandatory/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="HcPeriodicEvent">
            <description>Represents a time interval based event for executing one health check job periodically.
This construct can be used to execute periodically a health check job by specifying the number of months, weeks, days, hours, or minutes. For instance, in order to trigger a health check job execution every 12 hours, the following setup must be done:
hours=12

The start time for calculating scheduled events is assumed to be the current system time by default, unless explicitly set using the 'startTime' attribute. Furthermore, if the configured event is to stop at a specific date, 'stopTime' attribute must be set accordingly. Note that the default value of 'stopTime' is the end of century.</description>
            <attribute name="hcPeriodicEventId">
                <description>Holds the name used when identifying the MO.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="months">
                <description>Deprecated, The number of months.&#13;
Replaced by CalendarBasedPeriodicEvent.month.</description>
                <dataType>
                    <uint16>
                        <defaultValue>0</defaultValue>
                    </uint16>
                </dataType>
                <deprecated/>
            </attribute>
            <attribute name="weeks">
                <description>The number of weeks.</description>
                <dataType>
                    <uint16>
                        <defaultValue>0</defaultValue>
                    </uint16>
                </dataType>
            </attribute>
            <attribute name="days">
                <description>The number of days.</description>
                <dataType>
                    <uint16>
                        <defaultValue>0</defaultValue>
                    </uint16>
                </dataType>
            </attribute>
            <attribute name="hours">
                <description>The number of hours.</description>
                <mandatory/>
                <dataType>
                    <uint16/>
                </dataType>
            </attribute>
            <attribute name="minutes">
                <description>The number of minutes.</description>
                <dataType>
                    <uint16>
                        <defaultValue>0</defaultValue>
                    </uint16>
                </dataType>
            </attribute>
            <attribute name="startTime">
                <description>Start time. It is an optional attribute.&#13;
If not specified, the implementation uses the current system time as the default value.</description>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="stopTime">
                <description>Stop time. It is an optional attribute. The default value is the end of the century.</description>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <defaultValue>2099-12-31T23:59:59</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="HcCalendarBasedPeriodicEvent">
            <description>Represents a calendar based event for executing one health check job periodically.
This construct can be used to execute periodically a health check job by specifying the desired interval using calendar. For instance, in order to trigger a health check job execution every night at 2:00 am, the following setup must be done:
time=02:00:00

The start time for calculating scheduled events is assumed to be the current system time by default, unless explicitly set using the 'startTime' attribute. Furthermore, if the configured event is to stop at a specific date, 'stopTime' attribute must be set accordingly. Note that the default value of 'stopTime' is the end of century.
A scheduled event of this type is triggered only if ALL the conditions with regard to attribute values are satisfied. For example, if "dayOfWeek" is set to Monday and "dayOfMonth" is set to 1, the event will be triggered only if the first day of month is Monday.
Daylight saving adjustments in Spring and Fall are addressed such that the affected scheduled events are triggered exactly once.</description>
            <attribute name="hcCalendarBasedPeriodicEventId">
                <description>Holds the name used when identifying the MO.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="month">
                <description>Month.</description>
                <dataType>
                    <derivedDataTypeRef name="Month">
                        <defaultValue>0</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="dayOfWeek">
                <description>Day of week.</description>
                <dataType>
                    <enumRef name="DayOfWeek">
                        <defaultValue>ALL</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="dayOfMonth">
                <description>Day of month.</description>
                <dataType>
                    <derivedDataTypeRef name="DayOfMonth">
                        <defaultValue>0</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="time">
                <description>This is the time when the scheduled event must occur.</description>
                <mandatory/>
                <dataType>
                    <derivedDataTypeRef name="Time">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="dayOfWeekOccurrence">
                <description>The occurrence of the day of week specified by dayOfWeek attribute in the month.</description>
                <dataType>
                    <enumRef name="DayOfWeekOccurrence">
                        <defaultValue>ALL</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="startTime">
                <description>Start time. It is an optional attribute. &#13;
If not specified, the implementation uses the current system time as the default value.</description>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="stopTime">
                <description>Stop time. It is an optional attribute. The default value is the end of the century.</description>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTime">
                        <defaultValue>2099-12-31T23:59:59</defaultValue>
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <relationship name="HealthCheckM_to_HcJob">
            <containment>
                <parent>
                    <hasClass name="HealthCheckM">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcJob">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="HcJob_to_HcJobScheduler">
            <containment>
                <parent>
                    <hasClass name="HcJob">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcJobScheduler">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="HcJobScheduler_to_HcSingleEvent">
            <containment>
                <parent>
                    <hasClass name="HcJobScheduler">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcSingleEvent">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="HcJobScheduler_to_HcPeriodicEvent">
            <containment>
                <parent>
                    <hasClass name="HcJobScheduler">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcPeriodicEvent">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="HcJobScheduler_to_HcCalendarBasedPeriodicEvent">
            <containment>
                <parent>
                    <hasClass name="HcJobScheduler">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcCalendarBasedPeriodicEvent">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="HealthCheckM_to_HcRule">
            <containment>
                <parent>
                    <hasClass name="HealthCheckM">
                        <mimName>HCM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HcRule">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
    </mim>
    <mim author="LMI/LXR/SI Michael Hurley" contact="LMI/LXR/SI Michael Hurley" correction="1" date="2012-11-28" docNo="" name="ECIM_Top" namespace="urn:com:ericsson:ecim:ECIM_Top" namespacePrefix="ecim_top" organization="LMI/LXR" release="1" revision="A" version="2">
        <description>This is the top level of the Ericsson Common Information Model (ECIM). &#13;
This model contains the singleton, root Managed Object Class (MOC) ManagedElement under which the complete model is contained. Directly under ManagedElement are managed-function level classes SystemFunctions, Transport, Equipment and the root MOC of any managed functions. The Equipment Root MOC is in the Equipment Managed Object Model (MOM). The root MOC for a managed function is hosted in the managed function MOM.</description>
        <domainExtension domain="ECIM">
            <extension name="ecimMomName" value="ECIM_Top"/>
            <extension name="ecimMomVersion" value="2"/>
            <extension name="ecimMomRelease" value="1"/>
            <extension name="ecimMomCorrection" value="1"/>
            <extension name="immNamespace" value="NONE"/>
        </domainExtension>
        <class name="ManagedElement">
            <description>The top-level class in the Common Information Model is Managed Element root Managed Object Class.&#13;
From this class, all model entities are contained.  The Managed Object Class (MOC) has attributes that provide information on the Managed Element Identity, primary location and the products it contains.  </description>
            <systemCreated/>
            <root/>
            <attribute name="managedElementId">
                <description>The value component of the Relative Distinguished Name (RDN).</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="siteLocation">
                <description>A freetext attribute describing the geographic location of a Managed Element.&#13;
</description>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>A freetext string for additional information to assist Managed Element identification.</description>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="productIdentity">
                <description>Contains product information for the Managed Element and its Managed Functions.&#13;
This attribute is deprecated.</description>
                <dataType>
                    <sequence>
                        <structRef name="ProductIdentity">
                            <mimName>ECIM_CommonLibrary</mimName>
                        </structRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
                <deprecated/>
            </attribute>
            <attribute name="localDateTime">
                <description>This is the local date and time for the Managed Element.&#13;
The following format is used: YYYY-MM-DDThh:mm:ss&#13;
&#13;
The meaning of each field is as follows:&#13;
YYYY = four digit year&#13;
MM = two digit month (01=January, etc.)&#13;
DD = two digit day of month (01 through 31)&#13;
T = time designator (shows start of time component)&#13;
hh = two digits of hour (00 through 23, AM/PM not allowed)&#13;
mm = two digits of minute (00 through 59)&#13;
ss = two digits of second (00 through 59, leap second not allowed)&#13;
The hyphen [-] and the colon [:] are used as separators within the date and time of day expressions, respectively.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DateTimeWithoutOffset">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
                <specification>ISO 8601:2004(E)</specification>
            </attribute>
            <attribute name="timeZone">
                <description>This is the timeZone in which the Managed Element resides. &#13;
The possible values for this attribute are defined in the public-domain zoneinfo or Olson database. Locations are identified by a string indicating the continent or ocean and then the name of the location, typically the largest city within the region. See http://www.iana.org/time-zones for more information. Example: Europe/Stockholm.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="dateTimeOffset">
                <description>Difference between the value of the localDateTime attribute and UTC.</description>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <derivedDataTypeRef name="DifferenceFromUTC">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="dnPrefix">
                <description>It provides naming context that allows the managed objects to be partitioned into logical domains.&#13;
A Distingushed Name (DN) is defined by 3GPP TS 32.300, which splits the DN into a DN Prefix and Local DN, for example DN format: dnPrefix=&lt;DN Prefix&gt;, localDn =&lt;Local DN&gt; Fault Management: dnPrefix does not impact Fault Management, since an NMS recognises a Managed Element by IP address Performance Management (PM): The dnPrefix is present in the PM Data file, Result Output Period (ROP) file, if the dnPrefix attribute is specified, that is, not an empty string. Example: DC=ericsson.se,g3SubNetwork=Sweden&#13;
Example: DC=ericsson.se,g3SubNetwork=Sweden&#13;
</description>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="managedElementType">
                <description>The type of product being managed.&#13;
For example the type could be  RBS or CSCF.</description>
                <readOnly/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="release">
                <description>The release of the product type specified by the attribute managedElementType. &#13;
It commonly contains the Managed Element release, for example L12.0, 13A, R1A</description>
                <readOnly/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
        </class>
        <class name="SystemFunctions">
            <description>This model has a purpose to group the management of the system functions of the Managed Element.</description>
            <systemCreated/>
            <attribute name="systemFunctionsId">
                <description>The value component of the RDN.&#13;
</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
        </class>
        <class name="Transport">
            <description>This is a container for common transport functions used within the Managed Element. &#13;
&#13;
</description>
            <systemCreated/>
            <attribute name="transportId">
                <description>The value component of the RDN.&#13;
</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
        </class>
        <relationship name="ManagedElement_to_SystemFunctions">
            <containment>
                <parent>
                    <hasClass name="ManagedElement">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="SystemFunctions">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                    <cardinality>
                        <min>1</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="ManagedElement_to_Transport">
            <description>Containment association of the Transport MOC.</description>
            <containment>
                <parent>
                    <hasClass name="ManagedElement">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Transport">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
    </mim>
    <mim correction="0" name="ECIM_CommonLibrary" organization="LMI/LXR" release="8" version="1">
        <description>ECIM Common Library is a Common model fragment.&#13;
ECIM Common Library's MOM entities used by 2+ ECIM fragments are stored.</description>
        <domainExtension domain="ECIM">
            <extension name="ecimMomName" value="ECIM_CommonLibrary"/>
            <extension name="ecimMomVersion" value="1"/>
            <extension name="ecimMomRelease" value="8"/>
            <extension name="ecimMomCorrection" value="0"/>
        </domainExtension>
        <struct name="AsyncActionProgress">
            <description>Records the progress of an asynchronous action.</description>
            <structMember name="actionName">
                <description>Name of the invoked asynchronous action.</description>
                <string/>
            </structMember>
            <structMember name="additionalInfo">
                <description>Used for logging significant messages during execution of an action.</description>
                <sequence>
                    <string/>
                    <minLength>0</minLength>
                </sequence>
            </structMember>
            <structMember name="progressInfo">
                <description>Textual information that describes the actual state of the action execution.</description>
                <string/>
            </structMember>
            <structMember name="progressPercentage">
                <description>Progress of the action.&#13;
The range is between 0 and 100.</description>
                <uint8/>
            </structMember>
            <structMember name="result">
                <description>Result state of a completed action.&#13;
This field has value NOT_AVAILABLE if the action is not finished.</description>
                <enumRef name="ActionResultType">
                    <mimName>ECIM_CommonLibrary</mimName>
                </enumRef>
            </structMember>
            <structMember name="resultInfo">
                <description>Textual description of the outcome/result of the action containing useful information for the NMS.&#13;
If the action failed, it can contain an error message.</description>
                <string/>
            </structMember>
            <structMember name="state">
                <description>Current state of the action.</description>
                <enumRef name="ActionStateType">
                    <mimName>ECIM_CommonLibrary</mimName>
                </enumRef>
            </structMember>
            <structMember name="actionId">
                <description>Uniquely identifies the invocation of an action.&#13;
Identifies the invocation of an action when the managed object allows invocation of more than one action at a time.</description>
                <uint16/>
            </structMember>
            <structMember name="timeActionStarted">
                <description>Date and time when the current action was started.</description>
                <derivedDataTypeRef name="DateTime">
                    <mimName>ECIM_CommonLibrary</mimName>
                </derivedDataTypeRef>
            </structMember>
            <structMember name="timeActionCompleted">
                <description>Date and time when the action was completed (successfully or unsuccessfully).</description>
                <derivedDataTypeRef name="DateTime">
                    <mimName>ECIM_CommonLibrary</mimName>
                </derivedDataTypeRef>
            </structMember>
            <structMember name="timeOfLastStatusUpdate">
                <description>Date and time when the struct member state was last updated.</description>
                <derivedDataTypeRef name="DateTime">
                    <mimName>ECIM_CommonLibrary</mimName>
                </derivedDataTypeRef>
            </structMember>
        </struct>
        <struct name="EcimPassword">
            <description>Stores the password.</description>
            <structMember name="cleartext">
                <description>Indicates whether or not the password is entered in cleartext.</description>
                <derivedDataTypeRef name="EcimEmpty">
                    <mimName>ECIM_CommonLibrary</mimName>
                </derivedDataTypeRef>
            </structMember>
            <structMember name="password">
                <description>Holds the password or passphrase text.</description>
                <domainExtension domain="ECIM">
                    <extension name="isKey" value="true"/>
                </domainExtension>
                <string/>
            </structMember>
        </struct>
        <struct name="ProductIdentity">
            <description>Deprecated, Contains product information for a Managed Element and ManagedFunction(s).&#13;
Replaced by ProductData</description>
            <structMember name="productNumber">
                <description>The product number in Ericsson ABC format.&#13;
For information, refer to Ericsson Corporate Basic Standards. </description>
                <domainExtension domain="ECIM">
                    <extension name="isKey" value="true"/>
                </domainExtension>
                <string/>
            </structMember>
            <structMember name="productRevision">
                <description>The product revision in the form R[1-9][A-Z].&#13;
For information, refer to Ericsson Corporate Basic Standards.</description>
                <string/>
            </structMember>
            <structMember name="productDesignation">
                <description>Common product name.</description>
                <string/>
            </structMember>
        </struct>
        <struct name="ProductData">
            <description>Represents an Ericsson software product.&#13;
The product name, product number, and product revision represent product information stored in PRIM realization part.</description>
            <structMember name="productName">
                <description>Name of the product.</description>
                <string/>
            </structMember>
            <structMember name="productNumber">
                <description>Product number of the product.</description>
                <string/>
            </structMember>
            <structMember name="productRevision">
                <description>Revision state of the product.</description>
                <string/>
            </structMember>
            <structMember name="productionDate">
                <description>Production date of the product.</description>
                <derivedDataTypeRef name="DateTime">
                    <mimName>ECIM_CommonLibrary</mimName>
                </derivedDataTypeRef>
            </structMember>
            <structMember name="description">
                <description>Free text description of the product.</description>
                <string/>
            </structMember>
            <structMember name="type">
                <description>Free text description of the product type.</description>
                <string/>
            </structMember>
        </struct>
        <enum name="DayOfWeekOccurrence">
            <description>The occurrence of a day in the month, for example the first Monday of the month.&#13;
This is used in combination with DayOfWeek to schedule an event on a certain occurence of that day in the month, for example first Monday or last Friday of the month.</description>
            <enumMember name="FIRST">
                <description>First occurrence.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="SECOND">
                <description>Second occurrence.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="THIRD">
                <description>Third occurrence.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="FOURTH">
                <description>Fourth occurrence.</description>
                <value>4</value>
            </enumMember>
            <enumMember name="LAST">
                <description>Last occurrence.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="ALL">
                <description>All occurrences.</description>
                <value>0</value>
            </enumMember>
        </enum>
        <enum name="DayOfWeek">
            <description>Presents the day of the week.</description>
            <enumMember name="SUNDAY">
                <description>Sunday.</description>
                <value>7</value>
            </enumMember>
            <enumMember name="MONDAY">
                <description>Monday.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="TUESDAY">
                <description>Tuesday.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="WEDNESDAY">
                <description>Wednesday.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="THURSDAY">
                <description>Thursday.</description>
                <value>4</value>
            </enumMember>
            <enumMember name="FRIDAY">
                <description>Friday.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="SATURDAY">
                <description>Saturday.</description>
                <value>6</value>
            </enumMember>
            <enumMember name="ALL">
                <description>All days.</description>
                <value>0</value>
            </enumMember>
        </enum>
        <enum name="ActionResultType">
            <description>Lists the different results of an action.</description>
            <enumMember name="SUCCESS">
                <description>The asynchronous action ended with success.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="FAILURE">
                <description>The asynchronous action ended with failure.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="NOT_AVAILABLE">
                <description>No result is available yet.</description>
                <value>3</value>
            </enumMember>
        </enum>
        <enum name="ActionStateType">
            <description>Lists the action states.</description>
            <enumMember name="CANCELLING">
                <description>Cancellation is in progress.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="RUNNING">
                <description>The execution of the action is currently in progress.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="FINISHED">
                <description>The action is finished.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="CANCELLED">
                <description>The action has been cancelled and cancellation has been done.</description>
                <value>4</value>
            </enumMember>
        </enum>
        <enum name="AdmState">
            <description>Administrative state of a resource.</description>
            <enumMember name="LOCKED">
                <description>The resource is administratively prohibited from performing services for its users.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="UNLOCKED">
                <description>The resource is administratively permitted to perform services for its users.&#13;
This is independent of its inherent operability.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="SHUTTINGDOWN">
                <description>Use of the resource is administratively permitted to existing instances of use only.&#13;
While the system remains in the shutting down state the manager may at any time cause the managed object to revert to the locked state.</description>
                <value>2</value>
            </enumMember>
        </enum>
        <enum name="BasicAdmState">
            <description>Basic administrative states for a resource.</description>
            <enumMember name="LOCKED">
                <description> The resource is administratively prohibited from performing services for its users.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="UNLOCKED">
                <description>The resource is administratively permitted to perform services for its users.&#13;
This is independent of its inherent operability.</description>
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="OperState">
            <description>Operational states of a resource.</description>
            <enumMember name="DISABLED">
                <description>The resource is  totally inoperable.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="ENABLED">
                <description>The resource is partially or fully operable.</description>
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="SchemaFormat">
            <description>Schema formats of the supported data models.</description>
            <enumMember name="MP_DTD">
                <description>The data model format is XML based on mp.dtd.</description>
                <value>0</value>
            </enumMember>
        </enum>
        <enum name="CompressionTypes">
            <description>Supported common File Compression Type(s).</description>
            <enumMember name="GZIP">
                <description>GNU zip file compression type.</description>
                <value>0</value>
            </enumMember>
        </enum>
        <enum name="AvailabilityStatus">
            <description>Deprecated, The availability status is used to qualify the operational state.&#13;
It indicates why the operational state has changed its value.&#13;
replaced by AvailStatus.</description>
            <enumMember name="NO_STATUS">
                <description>The resource is fully operational. The operational state is enabled.&#13;
</description>
                <value>0</value>
            </enumMember>
            <enumMember name="IN_TEST">
                <description>The resource is undergoing a test procedure.&#13;
If the administrative state is locked or  shutting down, normal users are precluded from using the resource.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="FAILED">
                <description>The resource has an internal fault that prevents it from operating.&#13;
The operational state is disabled.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="POWER_OFF">
                <description>The resource requires power to be applied and is not powered on.&#13;
For example, either a fuse or some other protection device has removed power, or a low voltage condition has been detected. The operational state is disabled.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="OFF_LINE">
                <description>The resource requires a routine operation to be performed.&#13;
This operation is to place the resource online and make it available for use. The operation may be manual or automatic, or both. The operational state is disabled.</description>
                <value>4</value>
            </enumMember>
            <enumMember name="OFF_DUTY">
                <description>The resource has been made inactive by an internal control process.&#13;
Inactive is done in accordance with a predetermined time schedule. Under normal conditions the control process can be expected to reactivate the resource at some scheduled time, and it is therefore considered to be optional. The operational state is enabled or disabled.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="DEGRADED">
                <description>The service available from the resource is degraded in some respect.</description>
                <value>6</value>
            </enumMember>
            <enumMember name="LOG_FULL">
                <description>Indicates a log full condition.&#13;
The semantics are defined in CCITT Rec. X.735 | ISO/IEC 10164-6. </description>
                <value>7</value>
            </enumMember>
            <enumMember name="DEPENDENCY">
                <description>The resource cannot operate because some other resource on which it depends is unavailable.&#13;
For example, a device is not accessible because its controller is powered off. The operational state is disabled.</description>
                <value>11</value>
            </enumMember>
            <enumMember name="NOT_INSTALLED">
                <description>The resource represented by the managed object is not present, or is incomplete.&#13;
For example, a plug-in unit is missing, a cable is disconnected, or a software module is not loaded. The operational state is disabled.</description>
                <value>8</value>
            </enumMember>
            <enumMember name="DEPENDENCY_LOCKED">
                <description>The administrative state of a resource that this resource depends on is locked.&#13;
 or the availability status of the other resource is dependency locked. The operational state is disabled. </description>
                <value>9</value>
            </enumMember>
            <enumMember name="DEPENDENCY_FAILED">
                <description>The availability status of a resource that this resource depends on is failed or dependency failed.&#13;
The operational state is disabled.</description>
                <value>10</value>
            </enumMember>
        </enum>
        <enum name="BasicAvailabilityStatus">
            <description>Deprecated, The basic availability status is used to define the truly common operational state.&#13;
Replaced by BasicAvailStatus.&#13;
</description>
            <enumMember name="DEPENDENCY">
                <description>The resource cannot operate because some other resource on which it depends is unavailable.&#13;
 For example, a device is not accessible because its controller is powered off. The operational state is disabled.</description>
                <value>11</value>
            </enumMember>
            <enumMember name="FAILED">
                <description>The resource has an internal fault that prevents it from operating.&#13;
The operational state is disabled.</description>
                <value>2</value>
            </enumMember>
        </enum>
        <enum name="AvailStatus">
            <description>The availability status is used to qualify the operational state.&#13;
 It indicates why the operational state has changed its value. </description>
            <enumMember name="IN_TEST">
                <description>The resource is undergoing a test procedure. &#13;
If the administrative state is locked or  shutting down, normal users are prevented from using the resource.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="FAILED">
                <description>The resource has an internal fault that prevents it from operating.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="POWER_OFF">
                <description>The resource requires power to be applied and is not powered on.</description>
                <value>2</value>
            </enumMember>
            <enumMember name="OFF_LINE">
                <description>The resource requires a routine operation to be performed.&#13;
This routine operation is to place the resource online and make it available for use. The operation may be manual or automatic, or both. The operational state is disabled.</description>
                <value>3</value>
            </enumMember>
            <enumMember name="OFF_DUTY">
                <description>The resource has been made inactive by an internal control process.</description>
                <value>4</value>
            </enumMember>
            <enumMember name="DEPENDENCY">
                <description>The resource cannot operate because some other resource on which it depends is unavailable.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="DEGRADED">
                <description>The service available from the resource is degraded in some respect.</description>
                <value>6</value>
            </enumMember>
            <enumMember name="NOT_INSTALLED">
                <description>The resource represented by the managed object is not present, or is incomplete.</description>
                <value>7</value>
            </enumMember>
            <enumMember name="LOG_FULL">
                <description>Indicates a log full condition.&#13;
The semantics are defined in CCITT Rec. X.735 | ISO/IEC 10164-6. </description>
                <value>8</value>
            </enumMember>
            <enumMember name="DEPENDENCY_LOCKED">
                <description>The administrative state of a resource that this resource depends on is locked.&#13;
 or the availability status of the other resource is dependency locked.  </description>
                <value>9</value>
            </enumMember>
            <enumMember name="DEPENDENCY_FAILED">
                <description>The availability status of a resource that this resource depends on is failed or dependency failed.</description>
                <value>10</value>
            </enumMember>
            <enumMember name="DEPENDENCY_SHUTTINGDOWN">
                <description>The administrative state of a resource that this resource depends on is shutting down.&#13;
 or the availability status of the other resource is dependency shutting down. </description>
                <value>11</value>
            </enumMember>
        </enum>
        <enum name="BasicAvailStatus">
            <description>Truly common available status required to qualify the operational state.</description>
            <enumMember name="DEPENDENCY">
                <description>The resource cannot operate because of its dependency on other resource.</description>
                <value>5</value>
            </enumMember>
            <enumMember name="FAILED">
                <description>The resource has an internal fault that prevents it from operating.</description>
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="UsageState">
            <description>The usage state describes the usage of a resource.&#13;
The allowed values are defined by ITU-T X.731.</description>
            <enumMember name="IDLE">
                <description>The resource is not currently in use.&#13;
Defined by ITU-T X.731</description>
                <value>0</value>
            </enumMember>
            <enumMember name="ACTIVE">
                <description>The resource is in use and it has sufficient spare operating capacity.&#13;
Spare operating capacity to provide for additional users simultaneously.&#13;
Defined by ITU-T X.731</description>
                <value>1</value>
            </enumMember>
            <enumMember name="BUSY">
                <description>The resource is in use, but it has no spare operating capacity.&#13;
Spare operating capacity to provide for additional users at this instant.&#13;
Defined by ITU-T X.731</description>
                <value>2</value>
            </enumMember>
        </enum>
        <derivedDataType name="Time">
            <description>Represents the international standard for the representation of local time (ISO 8601).&#13;
The following pattern describes the Time format:&#13;
hh:mm:ss&#13;
Where:&#13;
hh = Two digits of hour (00 through 23, AM/PM not allowed)&#13;
mm = Two digits of minute (00 through 59)&#13;
ss   = Two digits of second (00 through 59, leap second not allowed)&#13;
</description>
            <baseType>
                <string>
                    <validValues>^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="DayOfMonth">
            <description>Represents a day in the month in digits.&#13;
The string format is "D" or "DD"(excluding quotes).&#13;
D or DD = One or two digit day (1 through 31)&#13;
0 denotes all days.</description>
            <baseType>
                <int16>
                    <range>
                        <min>0</min>
                        <max>31</max>
                    </range>
                    <ranges>
                        <subrange>
                            <min>0</min>
                            <max>31</max>
                        </subrange>
                    </ranges>
                </int16>
            </baseType>
        </derivedDataType>
        <derivedDataType name="Month">
            <description>Represents a month in digits.&#13;
The string format is "M" or "MM" (excluding quotes).&#13;
M or MM = One or two digit month (1 or 0 1=January, and so on)&#13;
0 denotes all months.</description>
            <baseType>
                <int16>
                    <range>
                        <min>0</min>
                        <max>12</max>
                    </range>
                    <ranges>
                        <subrange>
                            <min>0</min>
                            <max>12</max>
                        </subrange>
                    </ranges>
                </int16>
            </baseType>
        </derivedDataType>
        <derivedDataType name="DateTime">
            <description>Represents the international standard for the representation of date and time ( ISO 8601).&#13;
The string format is "YYYY-MM-DDThh:mm:ss.SSSZ" (excluding quotes).&#13;
A DateTime string consists of a date part, a time part, and an optional time zone information part. The time zone part may be a "Z", representing the Coordinated Universal Time (UTC) time zone (equals to +00) or a time zone offset (for example, +02:00).&#13;
If the time zone part is not present, the DateTime value represents local time.&#13;
&#13;
The following pattern describes the DateTime format:&#13;
YYYY-MM-DDThh:mm:ss[.S+][Z|+-hh:mm]&#13;
Where:&#13;
YYYY = Four digit year&#13;
MM = Two digit month (01=January, and so on)&#13;
DD = Two digit day of month (01 through 31)&#13;
T = Time designator (shows start of time component)&#13;
hh = Two digits of hour (00 through 23, AM/PM not allowed)&#13;
mm = Two digits of minute (00 through 59)&#13;
ss = Two digits of second (00 through 59, leap second not allowed)&#13;
S+ = One or more digits of decimal fraction of a second&#13;
Z = Time is UTC&#13;
+- = + or - character indicating positive or negative offset to UTC &#13;
&#13;
DateTime values are compliant with ISO 8601 "Representation of dates and times" but are restricted according to RFC 3339 "Date and Time on the Internet: Timestamps". The DateTime format is further restricted as follows:&#13;
- T and Z designators are upper case.&#13;
- . (dot) is used to indicate start of fractions of seconds (ISO 8601 also allows comma)&#13;
&#13;
</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>19</min>
                        <max>31</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>19</min>
                            <max>31</max>
                        </subrange>
                    </stringLength>
                    <validValues>^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}(([\+|\-](0[0-9]|1[0-9]|2[0-4])(:[0-5][0-9])?)|(Z)?)$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}(([\+|\-](0[0-9]|1[0-9]|2[0-4])(:[0-5][0-9])?)|(Z)?)$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="DateTimeWithoutOffset">
            <description>Represents the international standard for the representation of local date and time (ISO 8601).&#13;
The following pattern describes the DateTimeWithoutOffset format:&#13;
YYYY-MM-DDThh:mm:ss[.S+]&#13;
Where:&#13;
YYYY    = Four digit year&#13;
MM      = Two digit month (01=January, and so on)&#13;
DD      = Two digit day of month (01 through 31)&#13;
T       = Time designator (shows start of time component)&#13;
hh      = Two digits of hour (00 through 23, AM/PM not allowed)&#13;
mm      = Two digits of minute (00 through 59)&#13;
ss      = Two digits of second (00 through 59, leap second not allowed)&#13;
S+      = One or more digits of decimal fraction of a second&#13;
&#13;
DateTimeWithoutOffset values are compliant with ISO 8601 "Representation of dates and times" but are restricted according to RFC 3339 "Date and Time on the Internet: Timestamps". The DateTimeWithoutOffset format is further restricted as follows:&#13;
- T designator is upper case.&#13;
- . (dot) is used to indicate start of fractions of seconds (ISO 8601 also allows comma)&#13;
&#13;
</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>19</min>
                        <max>19</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>19</min>
                            <max>19</max>
                        </subrange>
                    </stringLength>
                    <validValues>^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="IpDNSAddress">
            <description>The IpDNSAddress type represents an IP address or a DNS domain name.&#13;
A version 4 IP address is specified in dotted quad notation, for example 130.100.92.154. RFC 791 describes the syntax in detail.&#13;
A version 6 IP address is specified by 8 groups of 16 bit hexadecimal values separated by colons, for example, 2001:0db8:85a3:0000:0000:8a2e:0370:7334. RFC 4291 describes the syntax in detail.&#13;
A DNS name is specified as a fully qualified domain name, for example, myhost.ericsson.com. The internet domain is loosely specified but RFC 1034 recommends a syntax.&#13;
</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>253</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>1</min>
                            <max>253</max>
                        </subrange>
                    </stringLength>
                    <validValues>^((([0-9][1-9])|([1-9][0-9])|[1-9]|1[0-1][0-9]|12[0-6]|12[8-9]|1[3-9][0-9]|2[0-2][0-3])\.)((([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])\.){2})([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}(:|((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})|(:[0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){0,1}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){0,2}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){0,3}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){0,4}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(:(:[0-9A-Fa-f]{1,4}){0,5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2}))))(%.+)?\s*$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^((([0-9][1-9])|([1-9][0-9])|[1-9]|1[0-1][0-9]|12[0-6]|12[8-9]|1[3-9][0-9]|2[0-2][0-3])\.)((([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])\.){2})([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}(:|((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})|(:[0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){0,1}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){0,2}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){0,3}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){0,4}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(:(:[0-9A-Fa-f]{1,4}){0,5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2}))))(%.+)?\s*$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="DifferenceFromUTC">
            <description>Time zone difference between the local current time  and Coordinated Universal Time (UTC).&#13;
The format is as follows:&#13;
[+/-]hh:mm&#13;
&#13;
It is expressed as positive (that is, with the leading plus sign [+]) if the local time is ahead of or equal to UTC of day and as negative (that is, with the leading minus sign [-]) if it is behind the UTC of day.&#13;
Example:  +01:00</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>6</min>
                        <max>6</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>6</min>
                            <max>6</max>
                        </subrange>
                    </stringLength>
                    <validValues>^([+|-])(0[0-9]|1[0-9]|2[0-4]):([0-5][0-9])$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^([+|-])(0[0-9]|1[0-9]|2[0-4]):([0-5][0-9])$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="EcimEmpty">
            <description>Represents a leaf that has no value, it conveys information by its presence or absence.</description>
            <baseType>
                <boolean/>
            </baseType>
        </derivedDataType>
        <derivedDataType name="DistinguishedName">
            <description>Represents the international standard for the representation of Distinguished Name (RFC 4517).&#13;
The DistinguishedName syntax is defined in RFC4517. The string representation of the Distinguished Name structure is as follows:&#13;
&#13;
distinguishedName = [ relativeDistinguishedName ( COMMA relativeDistinguishedName ) ]&#13;
relativeDistinguishedName = attributeTypeAndValue ( PLUS attributeTypeAndValue )&#13;
attributeTypeAndValue = attributeType EQUALS attributeValue&#13;
attributeType = descr/numericoid&#13;
attributeValue = string/hexstring</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>3</min>
                        <max>65535</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>3</min>
                            <max>65535</max>
                        </subrange>
                    </stringLength>
                    <validValues>^([^=,]*=(\\,|[^,])*,)*([^=,]*=(\\,|[^,])*)$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^([^=,]*=(\\,|[^,])*,)*([^=,]*=(\\,|[^,])*)$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="Date">
            <description>Represents the international standard for the representation of date (ISO 8601).&#13;
The string format is "YYYY-MM-DD" (excluding quotes).&#13;
&#13;
The following pattern describes the Date format:&#13;
YYYY-MM-DD&#13;
Where:&#13;
YYYY = Four digit year&#13;
MM = Two digit month (01=January, and so on)&#13;
DD = Two digit day of month (01 through 31)</description>
            <baseType>
                <string>
                    <validValues>^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])$</rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="Port">
            <description>Represents Internet Assigned Numbers Authority(IANA) standards port number valid from 0 to 65535.</description>
            <baseType>
                <uint16>
                    <range>
                        <min>0</min>
                        <max>65535</max>
                    </range>
                    <ranges>
                        <subrange>
                            <min>0</min>
                            <max>65535</max>
                        </subrange>
                    </ranges>
                </uint16>
            </baseType>
        </derivedDataType>
    </mim>
    <mim name="EcimCommon" release="0" version="1">
        <class name="ManagedObject">
            <description>The ManagedObject MO represents a generic MO type. It does not represent any real resource in the system and can therefore not be instanciated. It is used as a MO-reference that can refer to multiple MO types.</description>
            <interfaceOnly/>
        </class>
    </mim>
    <interMim>
        <relationship name="SystemFunctions_to_HealthCheckM">
            <domainExtension domain="CoreMW">
                <extension name="splitImmDn" value="true"/>
            </domainExtension>
            <containment>
                <parent>
                    <hasClass name="SystemFunctions">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HealthCheckM">
                        <mimName>HCM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>1</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
    </interMim>
    <mib correction="0" name="HCMInstances" release="0" version="1">
        <object parentDn="">
            <hasClass name="HealthCheckM">
                <mimName>HCM</mimName>
            </hasClass>
            <slot name="healthCheckMId">
                <value>1</value>
            </slot>
        </object>
    </mib>
</models>
